<UserControl 
	x:Class="BrowserPicker.View.Configuration"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:converter="clr-namespace:BrowserPicker.Converter"
	xmlns:view="clr-namespace:BrowserPicker.View"
	xmlns:viewModel="clr-namespace:BrowserPicker.ViewModel"
	xmlns:browserPicker="clr-namespace:BrowserPicker;assembly=BrowserPicker.Common"
	xmlns:system="clr-namespace:System;assembly=mscorlib"
	mc:Ignorable="d"
	d:DataContext="{d:DesignInstance viewModel:ConfigurationViewModel,d:IsDesignTimeCreatable=True}"
	Height="400" Width="600"
	Background="#333">
	<UserControl.Resources>
		<ResourceDictionary>
			<converter:IconFileToImageConverter x:Key="IconConverter" />

			<ObjectDataProvider x:Key="MatchTypes" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
				<ObjectDataProvider.MethodParameters>
					<x:Type TypeName="browserPicker:MatchType"/>
				</ObjectDataProvider.MethodParameters>
			</ObjectDataProvider>

			<DataTemplate x:Key="BrowserIcon" DataType="{x:Type viewModel:BrowserViewModel}">
				<Image Margin="0,0,0,0" DataContext="{Binding Model.IconPath, Converter={StaticResource IconConverter}}" d:DataContext="{StaticResource DefaultIcon}">
					<Image.Style>
						<Style TargetType="{x:Type Image}">
							<Setter Property="Source" Value="{Binding}" />
							<Style.Triggers>
								<DataTrigger Binding="{Binding}" Value="{x:Null}">
									<Setter Property="Source" Value="{StaticResource DefaultIcon}" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Image.Style>
				</Image>
			</DataTemplate>

			<DataTemplate x:Key="BrowserIconAndName" DataType="viewModel:BrowserViewModel">
				<StackPanel Orientation="Horizontal">
					<ContentPresenter ContentTemplate="{StaticResource BrowserIcon}" VerticalAlignment="Center" />
					<TextBlock Padding="5,0,0,0" Text="{Binding Model.Name}" VerticalAlignment="Center" />
				</StackPanel>
			</DataTemplate>
		</ResourceDictionary>
	</UserControl.Resources>

	<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="auto" />
		</Grid.RowDefinitions>

		<TabControl Background="#77000000" BorderBrush="#77FFFFFF" VerticalAlignment="Stretch">
			
			<TabControl.Resources>
				<Style TargetType="{x:Type TabItem}">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TabItem}">
								<Border Name="Border" Background="#22000000" Margin="2,0" BorderBrush="#77FFFFFF" BorderThickness="1,1,1,0" CornerRadius="10,10,0,0" TextBlock.Foreground="White" TextBlock.FontSize="12">
									<ContentPresenter x:Name="ContentSite" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,2" RecognizesAccessKey="True" />
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsSelected" Value="True">
										<Setter Property="FontWeight" Value="Bold" />
										<Setter TargetName="Border" Property="Background" Value="#22FFFFFF" />
									</Trigger>
									<Trigger Property="IsMouseOver" Value="true">
										<Setter Property="FontWeight" Value="Bold" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</TabControl.Resources>
			
			<TabItem Header="Browsers">
				<ScrollViewer VerticalScrollBarVisibility="Auto">
					<ItemsControl ItemsSource="{Binding ParentViewModel.Choices}">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<StackPanel Orientation="Vertical" CanVerticallyScroll="True" />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="viewModel:BrowserViewModel">
								<Grid>
									<Grid.Style>
										<Style>
											<Setter Property="UIElement.Visibility" Value="Visible" />
											<Style.Triggers>
												<DataTrigger Binding="{Binding Model.Removed}" Value="True">
													<Setter Property="UIElement.Visibility" Value="Collapsed" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Grid.Style>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource BrowserIcon}" Height="40" Width="40" Margin="20,0,0,0" />
									<TextBlock Text="{Binding Model.Name}" Grid.Column="1" Foreground="White" Margin="10" FontSize="18" />
									<TextBlock Grid.Column="2" Margin="10" FontSize="16">
										<Hyperlink Command="{Binding Disable}">
											<TextBlock>
												<TextBlock.Style>
													<Style>
														<Setter Property="TextBlock.Foreground" Value="Green" />
														<Setter Property="TextBlock.Text" Value="Enabled" />
														<Style.Triggers>
															<DataTrigger Binding="{Binding Model.Disabled}" Value="True">
																<Setter Property="TextBlock.Foreground" Value="OrangeRed" />
																<Setter Property="TextBlock.Text" Value="Disabled" />
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</TextBlock.Style>
											</TextBlock>
										</Hyperlink>
									</TextBlock>
									<TextBlock Grid.Column="3" Margin="10" FontSize="16">
										<Hyperlink Command="{Binding Edit}">
											<TextBlock Text="Edit" Foreground="CadetBlue" ToolTip="Edit browser definition" />
										</Hyperlink>
									</TextBlock>
									<TextBlock Grid.Column="4" Margin="10" FontSize="16">
										<Hyperlink Command="{Binding Remove}">
											<TextBlock Text="X" Foreground="Red" ToolTip="Remove browser from list" />
										</Hyperlink>
									</TextBlock>
								</Grid>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</ScrollViewer>
			</TabItem>
			
			<TabItem Header="Behaviour">
				<StackPanel Orientation="Vertical">
					<StackPanel.Resources>
						<Style TargetType="{x:Type CheckBox}">
							<Setter Property="Margin" Value="5,0,0,5"/>
						</Style>
					</StackPanel.Resources>
					<CheckBox Content="Turn off transparency" IsChecked="{Binding Settings.DisableTransparency}" Foreground="White" />
					<CheckBox Content="Always show browser selection window" IsChecked="{Binding Settings.AlwaysPrompt}" Foreground="White" />
					<CheckBox Content="Disable url resolution" IsChecked="{Binding Settings.DisableNetworkAccess}" Foreground="White" />
					<CheckBox Content="Ignore defaults when browser is not running" IsChecked="{Binding Settings.AlwaysUseDefaults}" Foreground="White" Checked="CheckBox_Checked" />
					<CheckBox Content="Update order in browser list based on usage" IsChecked="{Binding Settings.UseAutomaticOrdering}" Foreground="White" />
					<StackPanel Orientation="Horizontal">
						<CheckBox Content="When no default is configured matching the url, use:" IsChecked="{Binding Settings.UseFallbackDefault}" Foreground="White" />
						<ComboBox
							ItemsSource="{Binding ParentViewModel.Choices}"
							ItemTemplate="{StaticResource BrowserIconAndName}"
							IsSynchronizedWithCurrentItem="False"
							SelectedValuePath="Model.Name"
							SelectedValue="{Binding Settings.DefaultBrowser}"
							Height="22" Margin="5,-4,0,0" />
					</StackPanel>
					<CheckBox Content="Disallow network activity" Foreground="White" IsChecked="{Binding Settings.DisableNetworkAccess}" />
					<StackPanel Margin="25,0,0,0">
						<StackPanel.Style>
							<Style>
								<Setter Property="Control.IsEnabled" Value="True" />
								<Style.Triggers>
									<DataTrigger Binding="{Binding Settings.DisableNetworkAccess}" Value="True">
										<Setter Property="Control.IsEnabled" Value="False" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>
						<StackPanel Orientation="Horizontal">
							<TextBlock Foreground="White" Text="URL resolution timeout: " />
							<TextBox Text="{Binding Settings.UrlLookupTimeoutMilliseconds, UpdateSourceTrigger=PropertyChanged}"  />
						</StackPanel>
					</StackPanel>
				</StackPanel>
			</TabItem>

			<TabItem Header="Defaults">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<TextBlock Text="Set default browser per domain" Foreground="White" Margin="5" />
					<DataGrid
						ItemsSource="{Binding Defaults}"
						Grid.Row="1"
						AutoGenerateColumns="False"
						RowHeight="32"
						Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
						BorderBrush="{x:Null}"
						CanUserDeleteRows="False"
						CanUserAddRows="False"
						CanUserReorderColumns="False"
						CanUserResizeColumns="False">
						<DataGrid.Columns>
							<DataGridTemplateColumn Header="Match by">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate DataType="browserPicker:DefaultSetting">
										<ComboBox
											ItemsSource="{Binding Source={StaticResource MatchTypes}}"
											IsSynchronizedWithCurrentItem="False"
											SelectedValue="{Binding Type}"
											SelectedValuePath="Model.Name"
											VerticalContentAlignment="Center" />
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTextColumn Header="Pattern" Binding="{Binding Pattern}" Width="*">
								<DataGridTextColumn.ElementStyle>
									<Style TargetType="TextBlock">
										<Setter Property="VerticalAlignment" Value="Center" />
										<Setter Property="Padding" Value="5,0" />
									</Style>
								</DataGridTextColumn.ElementStyle>
							</DataGridTextColumn>
							<DataGridTemplateColumn Header="Browser" Width="55" SortMemberPath="Model.Name">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate DataType="browserPicker:DefaultSetting">
										<ComboBox
											ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.ParentViewModel.Choices}"
											ItemTemplate="{StaticResource BrowserIcon}"
											IsSynchronizedWithCurrentItem="False"
											SelectedValue="{Binding Browser}"
											SelectedValuePath="Model.Name"
											VerticalContentAlignment="Center" />
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTemplateColumn>
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate DataType="browserPicker:DefaultSetting">
										<Button Content="X" Command="{Binding Remove}" />
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
						</DataGrid.Columns>
					</DataGrid>

					<Grid Grid.Row="2">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<ComboBox ItemsSource="{Binding Source={StaticResource MatchTypes}}" SelectedItem="{Binding NewDefaultMatchType}" />
						<TextBox Name="NewFragment" Text="{Binding NewDefaultPattern}" Grid.Column="1" />
						<ComboBox
							ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=view:Configuration}, Path=DataContext.ParentViewModel.Choices}"
							ItemTemplate="{StaticResource BrowserIcon}"
							IsSynchronizedWithCurrentItem="False"
							SelectedValue="{Binding NewDefaultBrowser}"
							SelectedValuePath="Model.Name"
							Grid.Column="2" Height="22" />
						<Button Content="Add" Grid.Column="3" Padding="5,0" Command="{Binding AddDefault}" />
					</Grid>
				</Grid>
			</TabItem>

			<TabItem Header="Test defaults">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<TextBlock Text="Url:" Foreground="White" />

					<TextBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding TestDefaultsURL, UpdateSourceTrigger=PropertyChanged}" />

					<TextBlock Text="Default browser matched:" Grid.Column="0" Grid.Row="2" Foreground="White" />
					<TextBlock Text="{Binding TestDefaultsResult}" Grid.Column="1" Grid.Row="2" Foreground="LightGreen" />

					<TextBlock Text="Actual browser choice:" Grid.Column="0" Grid.Row="3" Foreground="White" />
					<TextBlock Text="{Binding TestActualResult}" Grid.Column="1" Grid.Row="3" Foreground="LightGreen" />
				</Grid>
			</TabItem>

		</TabControl>

		<StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">

			<TextBlock>
				<Hyperlink Command="{Binding AddBrowser}" Foreground="White">
					<TextBlock Text="Add browser" />
				</Hyperlink>
			</TextBlock>

			<TextBlock Margin="10,0,0,0">
				<Hyperlink Command="{Binding RefreshBrowsers}" Foreground="White">
					<TextBlock Text="Refresh browser list" />
				</Hyperlink>
			</TextBlock>

			<TextBlock Margin="10,0,0,0">
				<TextBlock.Style>
					<Style>
						<Style.Triggers>
							<DataTrigger Binding="{Binding ParentViewModel.Url.TargetURL}" Value="{x:Null}">
								<Setter Property="UIElement.Visibility" Value="Collapsed" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</TextBlock.Style>
				<Hyperlink Command="{Binding ParentViewModel.Configure}" Foreground="White">
					<TextBlock Text="Done" />
				</Hyperlink>
			</TextBlock>

			<TextBlock Margin="10,0,0,0">
				<TextBlock.Style>
					<Style>
						<Setter Property="UIElement.Visibility" Value="Collapsed" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding ParentViewModel.Url.TargetURL}" Value="{x:Null}">
								<Setter Property="UIElement.Visibility" Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</TextBlock.Style>
				<Hyperlink Command="{Binding ParentViewModel.Exit}" Foreground="White">
					<TextBlock Text="Done" />
				</Hyperlink>
			</TextBlock>

		</StackPanel>

	</Grid>
</UserControl>
