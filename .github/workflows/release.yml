name: CI

on:
  push:
    tags:
      - "v*.*.*"

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: BrowserPicker.sln
      App_Project_Path: src/BrowserPicker.App/BrowserPicker.App.csproj
      Wix_Project_Directory: dist/Setup
      Wix_Project_Path: dist/Setup/Setup.wixproj
      signtool: "C:\\Program Files (x86)\\Microsoft SDKs\\ClickOnce\\SignTool\\signtool.exe"

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Determine version
      id: version
      uses: paulhatch/semantic-version@v5.4.0
      with:
        version_format: "${major}.${minor}.${patch}-beta${increment}"

    # Execute all unit tests in the solution
    #- name: Execute unit tests
    #  run: dotnet test

    # Restore dotnet tools
    - name: Restore tools
      run: dotnet tool restore

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: dotnet restore $env:Solution_Name -p VersionPrefix=${env:major}.${env:minor}.${env:patch} -p VersionSuffix=beta${env:increment}
      env:
        major: ${{ steps.version.outputs.major }}
        minor: ${{ steps.version.outputs.minor }}
        patch: ${{ steps.version.outputs.patch }}
        increment: ${{ steps.version.outputs.increment }}

    # Build and publish the application
    - name: Build application
      run: dotnet publish -c $env:Configuration $env:App_Project_Path -p VersionPrefix=${env:major}.${env:minor}.${env:patch} -p VersionSuffix=beta${env:increment}
      env:
        Configuration: ${{ matrix.configuration }}
        major: ${{ steps.version.outputs.major }}
        minor: ${{ steps.version.outputs.minor }}
        patch: ${{ steps.version.outputs.patch }}
        increment: ${{ steps.version.outputs.increment }}

    # Decode the base 64 encoded pfx and save the Signing_Certificate
    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        [IO.File]::WriteAllBytes("GitHubActionsWorkflow.pfx", $pfx_cert_byte)

    - name: Sign the executable
      run: |
        & $env:signtool sign /debug /tr http://timestamp.digicert.com /td sha256 /fd sha256 /f GitHubActionsWorkflow.pfx /p '${{ secrets.Pfx_Key }}' src\BrowserPicker.App\bin\${env:Configuration}\net8.0-windows\publish\BrowserPicker*.dll src\BrowserPicker.App\bin\${env:Configuration}\net8.0-windows\publish\BrowserPicker.exe
      env:
        Configuration: ${{ matrix.configuration }}

    # Create the app package by building and packaging the Windows Application Packaging project
    - name: Create the installer
      run: dotnet build $env:Wix_Project_Path --no-dependencies -c $env:Configuration -p Version=${env:major}.${env:minor}.${env:patch}.${env:increment}
      env:
        Configuration: ${{ matrix.configuration }}
        major: ${{ steps.version.outputs.major }}
        minor: ${{ steps.version.outputs.minor }}
        patch: ${{ steps.version.outputs.patch }}
        increment: ${{ steps.version.outputs.increment }}

    - name: Sign the installer
      run: |
        & $env:signtool sign /debug /tr http://timestamp.digicert.com /td sha256 /fd sha256 /f GitHubActionsWorkflow.pfx /p '${{ secrets.Pfx_Key }}' dist\Setup\bin\${env:Configuration}\BrowserPicker.msi
      env:
        Configuration: ${{ matrix.configuration }}
        
    # Remove the pfx
    - name: Remove the pfx
      run: Remove-Item -path GitHubActionsWorkflow.pfx

    - name: Archive Portable
      uses: thedoctor0/zip-release@0.7.5
      with:
        type: 'zip'
        filename: 'Portable.zip'
        directory: src\BrowserPicker.App\bin\${env:Configuration}\net8.0-windows\publish

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
            ${{ env.Wix_Project_Directory }}/bin/${{ matrix.configuration }}
            src\BrowserPicker.App\bin\${env:Configuration}\net8.0-windows\publish\Portable.zip
